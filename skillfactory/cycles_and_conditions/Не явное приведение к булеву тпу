Неявное приведение к булеву типу
Если вы не используете никакой логический оператор или оператор сравнения в условном операторе, то интерпретатор за вас производит неявное приведение типов. То есть переводит переменную к bool и проверяет её значение. Вот сводная таблица приведения некоторых типов данных к bool:

True	False
int	-5, 10
(любое целое число, отличное от нуля)

0
float	-0.6, 45.5
(любое число с плавающей запятой, отличное от нуля)

0.0
str	“String”
(любая непустая строка)

“”
list	[1, 2, 3]
(любой непустой список)

[]
dict	{“one”: 1, “two”: 2}
(любой непустой словарь)

{}
NoneType	—	None
Чтобы проверить, чему будет приведён тот или иной тип,  можете воспользоваться встроенной функцией bool.

print(bool(0))  # False
print(bool(1))  # True

print(bool("")) # False
print(bool("1"))  # True

print(bool([])) # False
print(bool([1]))  # True