"""
Проверка эквивалентности
Как вы помните из прошлого модуля, списки в Python являются изменяемыми типами данных.
Когда вы присваиваете какой-то переменной список, то из-за особенностей реализации данного типа данных в эту
 переменную будет помещён адрес первого элемента списка и адрес на следующий элемент. И так по цепочке будет
  выстроен весь список.

Когда вы захотите присвоить новой переменной старый список, то не будет создан новый список! В новую переменную будет
 помещена ссылка на старый список. Проверить это можно с помощью оператора is.
"""

a = [1, 2, 3]
print(id(a))

b = a
print(id(b))

print(a is b)  # а и b являются один и тем же объектом
# True

"""Эквивалентные объекты всегда равны. Но равные объекты не всегда эквивалентны:"""
a = [1, 2, 3]
b = [1, 2, 3]

print(a == b)
print(a is b)

"""а и b выглядят одинаково, но являются абсолютно разными объектами.

Есть ещё один особый тип переменных в Python, который состоит из одного объекта None. None используется, например, 
когда мы не знаем значение переменной, но хотим объявить её. Это позволяет сделать переменную «нейтральной», чтобы те, 
кто будут читать ваш код, не гадали, почему вы объявили именно с таким значением, если это не несёт никакой смысловой 
нагрузки.

Ещё, допустим, вы хотите выполнить действие, которое может работать либо завершиться неудачно. Используя None, 
вы можете проверить успех действия.

Если вы хотите проверить, является ли значение переменной None или нет, следует использовать не 
оператор сравнения ==, а проверку эквивалентности, потому что идентификатор объекта None не меняется на 
протяжении всей программы."""


link = 'https://stepik.org/lesson/265082/step/5?auth=login&unit=246030'
"""
если кому-то это поможет. если x > y и z > x или z > x и y > x : выводим (х) и тоже делаем для y и z.

x:    2    2    1    3    3    1  

y:    1    3    2    2    1    3  

z:    3    1    3    1    2    2

Может кому-то будет полезно, сидел час, не мог понять как написать, все путалось. Распишите возможные варианты 
комбинаций и потом смотря на них пишите формулы.

если num1<num2<num3 или num1>num2>num3:
"""


a = int(input("Введите число A: "))
b = int(input("Введите число B: "))
c = int(input("Введите число C: "))

if a < b < c or a > b > c:
    print(b)
elif b < a < c or b > a > c:
    print(a)
if a < c < b or a > c > b:
    print(c)


