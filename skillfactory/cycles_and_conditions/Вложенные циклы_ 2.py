"""
Пример 3.

Условие задачи: дана двумерная матрица 3x3 (двумерный массив). Определить максимум и минимум каждой строки,
а также их индексы.

"""

random_matrix = [
    [9, 2, 1],
    [2, 5, 3],
    [4, 8, 5]
]

"""Решение задачи

Обращаться к элементам матрицы можем так:

random_matrix[i][j]

i — номер строки, j — номер столбца.
Нам нужно найти минимумы в каждой строке и индексы этих минимумов (номера столбцов с минимальным элементом).

Заведём списки, где мы будем хранить ответ на наш вопрос:"""

min_valuse_rows = []
max_valuse_rows = []

"""Для начала напишем цикл, в котором пройдём по всем строкам матрицы:"""

"""
Для начала напишем цикл, в котором пройдём по всем строкам матрицы:

for row in random_matrix: 

Таким образом в переменной row будут строки матрицы (обычные списки), в них и выполним поиск минимального и 
максимального элементов. Далее реализуем стандартный алгоритм поиска минимального элемента в списке. 
Суть этого алгоритма такая:

    Заведём новую переменную, в которой будем хранить кандидата на звание «минимальный элемент».
    Для начала пусть кандидатом будет первый элемент списка.
    В цикле пройдём по всем элементам списка.
    Сравним этот элемент списка с кандидатом.
    Если элемент меньше кандидата на звание «минимальный элемент», то наш текущий кандидат не подходит, он не минимальный.
    Поэтому теперь кандидатом будет этот самый элемент.
    В конце после прохода по всему списку наш кандидат будет меньше каждого элемента списка, а значит, мы нашли минимум.
"""

for row in random_matrix:
    min_index = 0
    min_value = row[min_index]

"""
for index_col in range(len(row)):

Теперь сравниваем элемент с индексом index_col и нашего кандидата в соответствии с алгоритмом:

if row[index_col] < min_value: 

Если он оказался меньше, то теперь кандидат — это сам текущий элемент:

min_value = row[index_col]
min_index = index_col

Поэтому значение кандидата min_value — это сам элемент row[index_col]. А индекс кандидата — это индекс элемента. Теперь после прохода по всему списку кандидатом как раз является минимум списка row. Поэтому добавим этого кандидата и его индекс в наши списки с ответами:

min_value_rows.append(min_value)
min_index_rows.append(min_index)

Теперь после прохода в цикле по строкам матрицы выведем наши ответы в консоль:

print(min_value_rows)
print(min_index_rows)

Аналогично сделаем для максимума. Полный код:
"""

random_matrix = [
   [9, 2, 1],
   [2, 5, 3],
   [4, 8, 5]
]

min_value_rows = []
min_index_rows = []
max_value_rows = []
max_index_rows = []

for row in random_matrix:
    min_index = 0
    min_value = row[min_index]
    max_index = 0
    max_value = row[max_index]

    for index_col in range(len(row)):
        if row[index_col] < min_value:
            min_value = row[index_col]
            min_index = index_col
        if row[index_col] > max_value:
            max_value = row[index_col]
            max_index = index_col

    min_value_rows.append(min_value)
    min_index_rows.append(min_index)
    max_value_rows.append(max_value)
    max_index_rows.append(max_index)

print("Минимальные элементы:", min_value_rows)
print("Их индексы:", min_index_rows)
print("Максимальные элементы:", max_value_rows)
print("Их индексы:", max_index_rows)
