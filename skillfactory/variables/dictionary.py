"""Словари
Использование списков открывает много возможностей, но и имеет свои ограничения. Каждому элементу списка присваивается
 целочисленный индекс, по которому можно обращаться к нему, модифицировать и даже удалять. С другой стороны,
 использование целочисленного индекса не является всегда удобным.

Например, если мы хотим в одной переменной хранить информацию о человеке (имя, фамилию, электронную почту, номер
телефона, почтовый адрес), то нумерация является неудобной и малоинформативной. Более того, в таком случае не
принципиален и порядок этих данных — главное, чтобы к ним можно было удобно обратиться.

Для этой цели в Python предусмотрены словари (dict) — упорядоченные наборы объектов, доступных по ключу.
Иными словами, словарь — это совокупность пар ключ-объект.

Сам объект, который хранится в словаре, может быть любым. Даже другим словарём. Но на ключи есть важное ограничение:
ключ может быть только объектом неизменяемых типов данных, т.е. числом, строкой или кортежем.

Как и в случае списков, словарь можно создать пустым, можно сразу наполнить его объектами, а можно расширять постепенно:

person = {} # с помощью фигурных скобок можно создать словарь

# словарь заполняется по принципу — ключ:объект (через двоеточие)
person = {'name' : 'Ivan Petrov'}

# в него можно также добавлять новые объекты по ключу
person['age'] = 25
person['email'] = 'ivan_petrov@example.com'
person['phone'] = '8(800)555-35-35'

print(person)
# {'name': 'Ivan Petrov', 'age': 25, 'email': 'ivan_petrov@example.com', 'phone': '8(800)555-35-35'}
Попытка извлечения объекта по несуществующему ключу приведёт к ошибке:

print(person['address'])
# KeyError: 'address'
Можно отдельно получить список ключей:

print(person.keys())
# dict_keys(['name', 'age', 'email', 'phone'])
Или список значений:

print(person.values())
# dict_values(['Ivan Petrov', 25, 'ivan_petrov@example.com', '8(800)555-35-35'])
Из словаря аналогично спискам можно удалить объект по его ключу. Словарь является упорядоченным. В функцию pop()
Вшвсегда нужно передавать ключ удаляемого объекта:

print(person)
# {'name': 'Ivan Petrov', 'age': 25, 'email': 'ivan_petrov@example.com', 'phone': '8(800)555-35-35'}

person.pop('phone')

print(person)
# {'name': 'Ivan Petrov', 'age': 25, 'email': 'ivan_petrov@example.com'}"""