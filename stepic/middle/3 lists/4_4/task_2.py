"""Вывести матрицу 2
На вход программе подаются два натуральных числаn иm,
каждое на отдельной строке — количество строк и столбцов в матрице. Далее вводятся сами элементы матрицы – слова,
каждое на отдельной строке; подряд идут элементы сначала первой строки, затем второй, и так далее.

Напишите программу, которая считывает элементы матрицы один за другим, выводит их в виде матрицы,
выводит пустую строку, и снова ту же матрицу, но уже поменяв местами строки со столбцами:
первая строка выводится как первый столбец, и так далее.

Формат входных данных
На вход программе подаются два числаn иm – количество строк и столбцов в матрице, далее идут n×m слов, каждое на отдельной строке.

Формат выходных данных
Программа должна вывести считанную матрицу, за ней пустую строку и ту же матрицу, но поменяв местами строки со столбцами.
Элементы матрицы разделять одним пробелом."""

# Ввод количества строк и столбцов
n = int(input("Введите количество строк: "))
m = int(input("Введите количество столбцов: "))

# Инициализация матрицы
matrix = []

# Считывание элементов матрицы
for i in range(n):
    row = []
    for j in range(m):
        el = input(f"Введите элемент [{i + 1}, {j + 1}]: ")
        row.append(el)
    matrix.append(row)

# Вывод исходной матрицы
for row in matrix:
    print(' '.join(row))

# Печатаем пустую строку
print()

# Вывод транспонированной матрицы
for j in range(m):
    for i in range(n):
        print(matrix[i][j], end=' ')
    print()  # Переход на новую строку после каждого столбца

# Второй способ решения задачи - взято из форума
n, m = int(input()), int(input())
arr = [[input() for _ in range(m)] for _ in range(n)]
for row in arr:
    print(*row)
print()
for i in range(m):
    for j in range(n):
        print(arr[j][i], end=' ')
    print()

# Третий способ решения задачи - взято из форума
n, m = [int(input()) for i in range(2)]

matrix = [[input() for i in range(m)] for j in range(n)]
new_matrix = [list(i) for i in zip(*matrix)]  # вот как надо транспонировать матрицу. Запоминайте

[print(*mat) for mat in matrix]
print()
[print(*mat) for mat in new_matrix]
