"""–ú–∞–≥–∏—á–µ—Å–∫–∏–π –∫–≤–∞–¥—Ä–∞—Ç ‚ú®üå∂Ô∏è
–ú–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º –ø–æ—Ä—è–¥–∫–∞ n –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Ä–∞–∑–º–µ—Ä–∞ n√ón, —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è –∏–∑ –≤—Å–µ—Ö —á–∏—Å–µ–ª 1,2,3, ‚Ä¶, n2 —Ç–∞–∫,
—á—Ç–æ —Å—É–º–º—ã –ø–æ –∫–∞–∂–¥–æ–º—É —Å—Ç–æ–ª–±—Ü—É, –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–µ –∏ –∫–∞–∂–¥–æ–π –∏–∑ –¥–≤—É—Ö –¥–∏–∞–≥–æ–Ω–∞–ª–µ–π —Ä–∞–≤–Ω—ã –º–µ–∂–¥—É —Å–æ–±–æ–π. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É,
–∫–æ—Ç–æ—Ä–∞—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–¥–∞–Ω–Ω–∞—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ –º–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º.

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤ –≤ –º–∞—Ç—Ä–∏—Ü–µ, –∑–∞—Ç–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã:
n —Å—Ç—Ä–æ–∫, –ø–æ n —á–∏—Å–µ–ª –≤ –∫–∞–∂–¥–æ–π, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–∞–º–∏.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ YES, –µ—Å–ª–∏ –º–∞—Ç—Ä–∏—Ü–∞ —è–≤–ª—è–µ—Ç—Å—è –º–∞–≥–∏—á–µ—Å–∫–∏–º –∫–≤–∞–¥—Ä–∞—Ç–æ–º, –∏–ª–∏ NO –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ."""


def sum_matrix(n, total, matrix):
    total += sum(matrix[i][j] for j in range(n) for i in range(n))  # —Å—É–º–º–∞ —Å—Ç—Ä–æ–∫
    total += sum(matrix[j][i] for j in range(n) for i in range(n))  # —Å—É–º–º–∞ —Å—Ç–æ–ª–±—Ü–æ–≤
    total += sum(matrix[i][i] for i in range(n))  # —Å—É–º–º–∞ –≥–ª–∞–≤–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏
    total += sum(matrix[i][n - i - 1] for i in range(n))  # —Å—É–º–º–∞ –≤—Ç–æ—Ä–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏
    return total


n = int(input())
matrix = [list(map(int, input().split())) for i in range(n)]
total = 0
total = sum_matrix(n, total, matrix) / (n + n + 2)  # —Å—É–º–º–∞ –º–∞—Ç—Ä–∏—Ü—ã –¥–µ–ª–µ–Ω–Ω–∞—è –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤, —Å—Ç—Ä–æ–∫ –∏ –¥–∏–∞–≥
flag = False
l = [matrix[i][j] for j in range(n) for i in range(n)]
l.sort()
if l == [i for i in range(1, n ** 2 + 1)]:
    flag = True
print('YES' if total == sum(matrix[-1]) and flag == True else 'NO')

""""–í—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–± —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ - –≤–∑—è—Ç–æ –∏–∑ Perplexity"""

# –í–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤
n = int(input())

# –°—á–∏—Ç—ã–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã
matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ n^2
expected_numbers = set(range(1, n * n + 1))
actual_numbers = set()

for row in matrix:
    actual_numbers.update(row)

if actual_numbers != expected_numbers:
    print("NO")
    exit()

# –°—É–º–º–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
magic_sum = sum(matrix[0])  # –°—É–º–º–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É–º–º —Å—Ç—Ä–æ–∫
for i in range(n):
    if sum(matrix[i]) != magic_sum:
        print("NO")
        exit()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É–º–º —Å—Ç–æ–ª–±—Ü–æ–≤
for j in range(n):
    if sum(matrix[i][j] for i in range(n)) != magic_sum:
        print("NO")
        exit()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–ª–∞–≤–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏
if sum(matrix[i][i] for i in range(n)) != magic_sum:
    print("NO")
    exit()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–±–æ—á–Ω–æ–π –¥–∏–∞–≥–æ–Ω–∞–ª–∏
if sum(matrix[i][n - 1 - i] for i in range(n)) != magic_sum:
    print("NO")
    exit()

# –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã
print("YES")
