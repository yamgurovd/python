"""–ü–∞–ª–∏–Ω–¥—Ä–æ–º üå∂Ô∏è
–ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é is_palindrome(text), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Å—Ç—Ä–æ–∫—É text –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ
True –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —è–≤–ª—è–µ—Ç—Å—è –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º –∏ False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 1. –ü–∞–ª–∏–Ω–¥—Ä–æ–º ‚Äì —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —á–∏—Ç–∞–µ—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤–æ –≤ –æ–±–æ–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 2. –ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—á–∏—Ç–∞–π—Ç–µ –±–æ–ª—å—à–∏–µ –∏ –º–∞–ª–µ–Ω—å–∫–∏–µ –±—É–∫–≤—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏, –∞ —Ç–∞–∫–∂–µ –∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ –ø—Ä–æ–±–µ–ª—ã,
–∞ —Ç–∞–∫–∂–µ —Å–∏–º–≤–æ–ª—ã , . ! ? -.

–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ 3. –°–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –∫–æ–¥:

print(is_palindrome('–ê —Ä–æ–∑–∞ —É–ø–∞–ª–∞ –Ω–∞ –ª–∞–ø—É –ê–∑–æ—Ä–∞.'))
print(is_palindrome('Gabler Ruby - burrel bag!'))
print(is_palindrome('BEEGEEK'))
–¥–æ–ª–∂–µ–Ω –≤—ã–≤–æ–¥–∏—Ç—å:

True
True
False"""


def is_palindrome(text):
    # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ –∑–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è, –ø—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É
    cleaned_text = ''.join(char.lower() for char in text if char.isalnum())

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–∞–ª–∏–Ω–¥—Ä–æ–º–æ–º
    return cleaned_text == cleaned_text[::-1]


# –°—á–∏—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
txt = input()

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
print(is_palindrome(txt))


# –í—Ç–æ—Ä–æ–π —Å–ø–æ—Å–æ–± —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏
# –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
def is_palindrome(text):
    symbols = [' ', ',', '.', '!', '?', '-']
    for c in symbols:
        text = text.replace(c, '')
    text = text.lower()
    return text == text[::-1]


# —Å—á–∏—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
txt = input()

# –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
print(is_palindrome(txt))
