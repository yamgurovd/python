"""Учитывая массив целых чисел nums и целочисленную цель, верните индексы двух чисел таким образом, чтобы они в сумме давали цель.

Вы можете предположить, что у каждого входного сигнала будет ровно одно решение, и вы не сможете использовать один и тот же элемент дважды.

Вы можете вернуть ответ в любом порядке.
Пример 1:

Входные данные: nums = [2,7,11,15], цель = 9
Выходные данные: [0,1]
Пояснение: Поскольку nums[0] + nums[1] == 9, мы возвращаем [0, 1].
Пример 2:

Входные данные: числа = [3,2,4], цель = 6
Выходные данные: [1,2]
Пример 3:

Входные данные: числа = [3,3], цель = 6
Выходные данные: [0,1]


Ограничения:

2 <= цифры.длина <= 104
-109 <= числа[i] <= 109
-109 <= target <= 109
Существует только один правильный ответ.


Продолжение: Можете ли вы предложить алгоритм, который был бы менее сложным по времени, чем O(n2)?"""


# Мое решение


def twoSum(nums, target):
    for i in range(len(nums)-1):
        if nums[i] + nums[i + 1] == target:
            print(i, nums[i])


nums = [2, 7, 11, 15]

print(twoSum(nums, 9))
